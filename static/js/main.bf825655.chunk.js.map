{"version":3,"sources":["Product/PlusMinusNumberBar.js","Product/ProductItem.js","Product/ProductList.js","CiteBars/TopBar.js","CiteBars/BottomBar.js","Product/Basket.js","Error.js","App.js","reportWebVitals.js","index.js"],"names":["PlusMinusNumberBar","boughtProduct","decrementNumber","incrementNumber","className","onClick","id","numberInBasket","ProductItem","product","index","changeCheckboxFunction","src","imgSource","alt","type","checked","isAddedToBasket","onChange","name","value","ProductList","props","navigate","useNavigate","products","map","basketItem","incrementProduct","decrementProduct","TopBar","productNamesInBasket","to","onMouseUp","title","BottomBar","Basket","isBasketEmpty","setProducts","setProductNamesInBasket","totalPrice","discount","Math","floor","discountForNumberBought","calcPrice","prod","expelFromBusket","Error","App","React","useState","setBasketState","exact","path","element","addToBasket","Number","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf825655.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//Компонент - панель уменьшения-увеличения количества\r\nexport default function PlusMinusNumberBar({boughtProduct, decrementNumber, incrementNumber}){\r\n    return(\r\n        <div className = 'plusMinusNumberBar'>\r\n            <button className = 'changeNumberButton' onClick = {() => decrementNumber(boughtProduct.id)} >-</button>\r\n            <div id = 'productAmount'>{boughtProduct.numberInBasket}</div>\r\n            <button className = 'changeNumberButton' onClick = {() => incrementNumber(boughtProduct.id)} >+</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ProductItemStyles from './ProductItemStyles.css'\r\nimport PlusMinusNumberBar from './PlusMinusNumberBar'\r\n\r\n//Компонент для продажи отдельных продуктов\r\nfunction ProductItem({product, index, changeCheckboxFunction, incrementNumber, decrementNumber}){\r\n    \r\n    return (\r\n        <li className = 'productItemStyles' >\r\n            {/* Изображение продукта */}\r\n            <img src = {product.imgSource} alt = 'Изображение' className = 'productImg'/>\r\n\r\n            {/* Информация о продукте - имя и цена */}\r\n            <span className = 'productNameAndValue'>\r\n                <div>\r\n                    <input \r\n                        type = 'checkbox' \r\n                        className = 'input'\r\n                        checked = {product.isAddedToBasket} \r\n                        onChange = {() => changeCheckboxFunction(product.id)}\r\n                    />\r\n                    {index + 1}\r\n                </div>\r\n                {product.name} \r\n                <strong> {product.value + \" $/кг\"} </strong>\r\n            </span>\r\n\r\n            {/* Кнопка добавления продукта в корзину */}\r\n            <button type = 'button' className = 'button' className = 'itemButton' onClick = {() => changeCheckboxFunction(product.id)}>\r\n                {!product.isAddedToBasket ? 'Добавить в корзину' : 'Удалить из корзины'}\r\n            </button>\r\n\r\n            {/* Регулировка количества товаров */}\r\n            <PlusMinusNumberBar \r\n                boughtProduct = {product}\r\n                decrementNumber = {decrementNumber} \r\n                incrementNumber = {incrementNumber}\r\n    \r\n            />\r\n        </li>\r\n    )     \r\n}\r\n\r\nProductItem.propTypes = {\r\n    product: PropTypes.array.isRequired,\r\n    index: PropTypes.number,\r\n    changeCheckboxFunction: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ProductItem","import React from 'react'\r\nimport ProductItem from './ProductItem'\r\nimport PropTypes from 'prop-types'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\n//Компонент - общее окно списка товаров\r\nfunction ProductList(props){\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        <div id=\"productListComponent\">\r\n            <ul className = 'productListStyles'>\r\n            {props.products.map((product, index) => {\r\n                return (\r\n                    <ProductItem \r\n                        key = {product.id} \r\n                        product = {product} \r\n                        index = {index} \r\n                        changeCheckboxFunction = {props.basketItem} \r\n                        incrementNumber = {props.incrementProduct} \r\n                        decrementNumber = {props.decrementProduct}\r\n                    />\r\n                )\r\n            })}\r\n            </ul>\r\n            <div id = 'buttonToBasketFromMain'>\r\n                <button className = 'navigateButton' onClick = {() => navigate('/testShopProject/basket')} >Перейти в корзину</button>\r\n            </div> \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nProductList.propTypes = {\r\n    products: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport {NavLink, useNavigate} from 'react-router-dom'\r\n\r\n//Компонент верхней панели\r\nfunction TopBar ({productNamesInBasket}){\r\n    let navigate = useNavigate();\r\n    return (\r\n         <header className = 'header'>\r\n             <nav id=\"navLinksBar\">\r\n                 <NavLink to = \"/testShopProject/\" className = 'navLink'>Главная страница</NavLink>\r\n                 <NavLink to = \"/testShopProject/basket\" className = 'navLink'>Корзина</NavLink>\r\n             </nav>\r\n             <div className = \"basketImgAndNumber\">\r\n                <img \r\n                    src = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQkxK_JuIXs1RguYddwJkhOiQouLCkK0Ut95Q&usqp=CAU\" \r\n                    className = \"basketImage\" \r\n                    alt = \"корзина\" \r\n                    onMouseUp = {() => navigate(\"/testShopProject/basket\")} \r\n                    title = 'Перейти в корзину'\r\n                />\r\n                <div className = \"numberOfProductsInBasket\">\r\n                    {productNamesInBasket}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import React from \"react\";\r\n\r\nfunction BottomBar (){\r\n    return <footer className = 'footer'>It's the footer</footer>;\r\n}\r\n\r\nexport default BottomBar;","import React from \"react\";\r\nimport PlusMinusNumberBar from \"./PlusMinusNumberBar\";\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\n//Компонент корзина с продуктами, общей ценой и оплатой\r\nexport default function Basket({products, incrementNumber, decrementNumber, isBasketEmpty, setProducts, productNamesInBasket, setProductNamesInBasket}){\r\n    let totalPrice = 0; //Общая цена товаров в корзине\r\n    let navigate = useNavigate();\r\n\r\n    //Подсчет цену продукта, учитывая количество в корзину и скидку за количество товара\r\n    function calcPrice(product){\r\n        return product.value * product.numberInBasket - product.discount * Math.floor(product.numberInBasket / product.discountForNumberBought);\r\n    }\r\n\r\n    //Убрать продукт из добавленных в корзину при нажатии на кнопку \"х\"\r\n    function expelFromBusket(product){\r\n        setProducts(\r\n            products.map(\r\n                (prod) => {\r\n                    if(prod.id === product.id){\r\n                        prod.isAddedToBasket = false;\r\n                        prod.numberInBasket = 0;\r\n                        setProductNamesInBasket(productNamesInBasket -= 1);\r\n                    }\r\n                    return prod;\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    //рендеринг компонента в зависимости есть ли продукты в корзине или она пуста\r\n    if(isBasketEmpty){\r\n        return <div className = 'basketComponent'>\r\n            <div className = 'emptyBasket'>Корзина пуста :(</div> \r\n            <button className = 'navigateButton' onClick = {() => navigate('/testShopProject/')} >Перейти на главную страницу</button> \r\n        </div>\r\n    } else{\r\n        return (\r\n            <div className = 'basketComponent'>\r\n                <ul className =\"basketUl\">\r\n                {\r\n                    products.map( (product) => {\r\n                        if(product.isAddedToBasket && product.numberInBasket > 0){\r\n                            isBasketEmpty = false;\r\n                            totalPrice += calcPrice(product);\r\n                            return(\r\n                                <li className = \"basketLi\">\r\n                                    <div className = \"productBasketId\">{product.name}</div>\r\n                                    <div className = \"productBasketValue\">{`${product.value} $`}</div>\r\n                                    <div className = \"productBasketNumber\">{`№ ${product.numberInBasket}`}</div>\r\n                                    <div className = \"productBasketDiscount\">\r\n                                        {`cкидка ${product.discount * Math.floor(product.numberInBasket/product.discountForNumberBought)} $`}\r\n                                    </div>\r\n                                    <PlusMinusNumberBar \r\n                                        boughtProduct = {product} \r\n                                        decrementNumber = {decrementNumber} \r\n                                        incrementNumber = {incrementNumber}\r\n                                        \r\n                                    />\r\n                                    <div className = 'productTotalPrice'>\r\n                                        {`${product.value * product.numberInBasket - product.discount * \r\n                                            Math.floor(product.numberInBasket/product.discountForNumberBought)} $`}\r\n                                    </div>\r\n                                    <button onClick = {() => expelFromBusket(product)} id = 'expelFromBasket'>x</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                </ul>\r\n                <div className = 'summeryBasket'>\r\n                    <div>\r\n                        <div>Общая сумма:</div>\r\n                        <div id = \"totalPrice\">{`${totalPrice} $`}</div>\r\n                    </div>\r\n                    <button className = 'payButton'>Перейти к оплате</button>\r\n                </div>\r\n                <button className = 'navigateButton' onClick = {() => navigate('/testShopProject/')} >Перейти на главную страницу</button> \r\n            </div>\r\n            \r\n        )\r\n        \r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Error(){\r\n    return <h1>404 - Page not found</h1>\r\n}","import React from 'react'\nimport ProductList from './Product/ProductList'\nimport TopBar from './CiteBars/TopBar'\nimport BottomBar from './CiteBars/BottomBar'\nimport Basket from './Product/Basket'\nimport Error from './Error'\nimport { BrowserRouter, Routes, Route} from 'react-router-dom'\n\n\nexport default function App() {\n  let [products, setProducts] = React.useState([\n    {id: 1, name: 'Банан', value: 10, isAddedToBasket: false, numberInBasket: 0, discount: 0, discountForNumberBought: 1, imgSource: 'https://good-tips.pro/images/health/banana/banana-health-big.jpg'},\n    {id: 2, name: 'Яблоко', value: 8, isAddedToBasket: false,  numberInBasket: 0, discount: 0, discountForNumberBought: 1, imgSource: 'https://st.depositphotos.com/1003272/1632/i/600/depositphotos_16322913-stock-photo-red-apple.jpg'},\n    {id: 3, name: 'Папайа', value: 10, isAddedToBasket: false,  numberInBasket: 0, discount: 5, discountForNumberBought: 3, imgSource: 'https://yesfrukt.com/storage/source/0f494eef36046ddb3223867e02350e99/content/1/xyMiQSxRPe4pojDgSx4f-zxofYyQaUe7f.jpeg.pagespeed.ic.GShY-v5PZe.jpg'}\n  ]);\n\n  //let [isBusketImgClicked, setGoToBasket] = React.useState(false);\n  let [productNamesInBasket, setProductNamesInBasket] = React.useState(0); //количество наименований товаров в корзине\n  let [isBasketEmpty, setBasketState] = React.useState(true);   \n\n  \n  return (\n    \n      <BrowserRouter>\n        <TopBar productNamesInBasket = {productNamesInBasket}/>\n        <Routes>\n          <Route exact path = {\"/testShopProject/\"} element = {<ProductList \n                products = {products} \n                basketItem = {addToBasket} \n                incrementProduct = {incrementNumber} \n                decrementProduct = {decrementNumber}\n              />\n            } \n          />\n\n          <Route exact path = \"/testShopProject/basket\" element = {<Basket \n              products = {products}   \n              className = 'basketComponent' \n              incrementNumber = {incrementNumber} \n              decrementNumber = {decrementNumber}\n              isBasketEmpty = {isBasketEmpty}\n              setProducts = {setProducts}\n              productNamesInBasket = {productNamesInBasket}\n              setProductNamesInBasket = {setProductNamesInBasket}\n              />\n            } \n          />\n\n          <Route path = '*' element = {<Error />} />\n          \n        </Routes>\n        <BottomBar/>\n      </BrowserRouter>\n    \n  );\n\n  /*\n  //Рендеринг страницы в 2 вариантах - основная страница товаров и страница корзины\n  if(isBusketImgClicked){\n    return (\n      <div className = \"basketPage\">\n        <TopBar goToBasket = {goToBasket} productNamesInBasket = {productNamesInBasket}/>\n        <Basket \n          products = {products}   \n          className = 'basketComponent' \n          incrementNumber = {incrementNumber} \n          decrementNumber = {decrementNumber}\n          isBasketEmpty = {isBasketEmpty}\n          setProducts = {setProducts}\n          productNamesInBasket = {productNamesInBasket}\n          setProductNamesInBasket = {setProductNamesInBasket}\n        />\n        <button className = 'navigateButton' onClick = {returnFromBasketToMainPage}>Перейти на главную страницу</button>\n        <BottomBar/>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"wrapper\">\n          <TopBar goToBasket = {goToBasket} productNamesInBasket = {productNamesInBasket}/>\n          <ProductList \n            products = {products} \n            basketItem = {addToBasket} \n            incrementProduct = {incrementNumber} \n            decrementProduct = {decrementNumber}/>\n          <div>\n            <button className = 'navigateButton' onClick = {goToBasket}>Перейти в корзину</button>\n          </div>\n          <BottomBar/>\n      </div>\n    )\n  }*/\n\n  //Функция добавить товар в корзину - количество товаров - 1\n  function addToBasket(id){\n    setProducts ( \n      products.map(\n        product => {\n          if(product.id === id){\n            setProductNamesInBasket(productNamesInBasket = product.isAddedToBasket ? --productNamesInBasket : ++productNamesInBasket);\n            setBasketState(false);\n            product.isAddedToBasket = !product.isAddedToBasket;\n            product.numberInBasket = Number(!Boolean(product.numberInBasket));\n          }\n          return product;\n        }\n      )\n    )\n  }\n\n  //Функция уменьшить количество товара на 1, если станет 0  - удалить из корзины\n  function decrementNumber (id){\n    setProducts(  \n      products.map( \n        product => {\n          if(product.id === id){\n            product.numberInBasket = (product.numberInBasket > 0) ? --product.numberInBasket : 0;\n            if(product.numberInBasket === 0) {\n              product.isAddedToBasket = false;\n              setProductNamesInBasket(productNamesInBasket -= 1);\n            } \n          }\n          return product;\n        }\n      )\n    )\n  }\n\n  //Функция увеличить количество товара на 1, если изначально 0  - добавить в корзину\n  function incrementNumber(id) {\n    setProducts(\n      products.map( (product) => {\n        if(product.id === id){\n          if(product.numberInBasket === 0) {\n            addToBasket(id);\n          } else{\n            product.numberInBasket  += 1;\n          } \n        }\n        return product;\n      })\n    )\n  }\n\n  /*\n  //Функция для перерендеринга страницы на страницу корзины при клике на изображение корзины\n  function goToBasket(){\n    setGoToBasket(\n      isBusketImgClicked = true\n    )\n  }\n\n  //Функция для перерендеринга страницы на основную страницу при возврате из страницы корзины \n  function returnFromBasketToMainPage(){\n    setGoToBasket(\n      isBusketImgClicked = false\n    )\n  }*/\n\n\n  \n  \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}