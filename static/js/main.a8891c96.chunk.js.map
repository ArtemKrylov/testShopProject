{"version":3,"sources":["Product/PlusMinusNumberBar.js","Product/ProductItem.js","Product/ProductList.js","CiteBars/TopBar.js","CiteBars/BottomBar.js","Product/Basket.js","App.js","reportWebVitals.js","index.js"],"names":["PlusMinusNumberBar","boughtProduct","decrementNumber","incrementNumber","className","onClick","id","numberInBasket","ProductItem","product","index","changeCheckboxFunction","src","imgSource","alt","type","checked","isAddedToBasket","onChange","name","value","ProductList","props","products","map","basketItem","incrementProduct","decrementProduct","TopBar","goToBasket","productNamesInBasket","onMouseUp","title","BottomBar","Basket","isBasketEmpty","setProducts","setProductNamesInBasket","totalPrice","discount","Math","floor","discountForNumberBought","calcPrice","prod","expelFromBusket","App","React","useState","isBusketImgClicked","setGoToBasket","setBasketState","addToBasket","Number","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8891c96.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//Компонент - панель уменьшения-увеличения количества\r\nexport default function PlusMinusNumberBar({boughtProduct, decrementNumber, incrementNumber}){\r\n    return(\r\n        <div className = 'plusMinusNumberBar'>\r\n            <button className = 'changeNumberButton' onClick = {() => decrementNumber(boughtProduct.id)} >-</button>\r\n            <div id = 'productAmount'>{boughtProduct.numberInBasket}</div>\r\n            <button className = 'changeNumberButton' onClick = {() => incrementNumber(boughtProduct.id)} >+</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ProductItemStyles from './ProductItemStyles.css'\r\nimport PlusMinusNumberBar from './PlusMinusNumberBar'\r\n\r\n//Компонент для продажи отдельных продуктов\r\nfunction ProductItem({product, index, changeCheckboxFunction, incrementNumber, decrementNumber}){\r\n    \r\n    return (\r\n        <li className = 'productItemStyles' >\r\n            {/* Изображение продукта */}\r\n            <img src = {product.imgSource} alt = 'Изображение' className = 'productImg'/>\r\n\r\n            {/* Информация о продукте - имя и цена */}\r\n            <span className = 'productNameAndValue'>\r\n                <div>\r\n                    <input \r\n                        type = 'checkbox' \r\n                        className = 'input'\r\n                        checked = {product.isAddedToBasket} \r\n                        onChange = {() => changeCheckboxFunction(product.id)}\r\n                    />\r\n                    {index + 1}\r\n                </div>\r\n                {product.name} \r\n                <strong> {product.value + \" $/кг\"} </strong>\r\n            </span>\r\n\r\n            {/* Кнопка добавления продукта в корзину */}\r\n            <button type = 'button' className = 'button' className = 'itemButton' onClick = {() => changeCheckboxFunction(product.id)}>\r\n                {!product.isAddedToBasket ? 'Добавить в корзину' : 'В корзине'}\r\n            </button>\r\n\r\n            {/* Регулировка количества товаров */}\r\n            <PlusMinusNumberBar \r\n                boughtProduct = {product}\r\n                decrementNumber = {decrementNumber} \r\n                incrementNumber = {incrementNumber}\r\n    \r\n            />\r\n        </li>\r\n    )     \r\n}\r\n\r\nProductItem.propTypes = {\r\n    product: PropTypes.array.isRequired,\r\n    index: PropTypes.number,\r\n    changeCheckboxFunction: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ProductItem","import React from 'react'\r\nimport ProductItem from './ProductItem'\r\nimport PropTypes from 'prop-types'\r\n\r\n//Компонент - общее окно списка товаров\r\nfunction ProductList(props){\r\n    return (\r\n        <ul className = 'productListStyles'>\r\n            {props.products.map((product, index) => {\r\n                return (\r\n                    <ProductItem \r\n                        key = {product.id} \r\n                        product = {product} \r\n                        index = {index} \r\n                        changeCheckboxFunction = {props.basketItem} \r\n                        incrementNumber = {props.incrementProduct} \r\n                        decrementNumber = {props.decrementProduct}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nProductList.propTypes = {\r\n    products: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\n\r\n//Компонент верхней панели\r\nfunction TopBar ({goToBasket, productNamesInBasket}){\r\n    return (\r\n         <header className = 'header'>\r\n             <div>It's the header</div>\r\n             <div className = \"basketImgAndNumber\">\r\n                <img \r\n                    src = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQkxK_JuIXs1RguYddwJkhOiQouLCkK0Ut95Q&usqp=CAU\" \r\n                    className = \"basketImage\" \r\n                    alt = \"корзина\" \r\n                    onMouseUp = {goToBasket} \r\n                    title = 'Перейти в корзину'\r\n                />\r\n                <div className = \"numberOfProductsInBasket\">\r\n                    {productNamesInBasket}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import React from \"react\";\r\n\r\nfunction BottomBar (){\r\n    return <footer className = 'footer'>It's the footer</footer>;\r\n}\r\n\r\nexport default BottomBar;","import React from \"react\";\r\nimport PlusMinusNumberBar from \"./PlusMinusNumberBar\";\r\n\r\n//Компонент корзина с продуктами, общей ценой и оплатой\r\nexport default function Basket({products, incrementNumber, decrementNumber, isBasketEmpty, setProducts, productNamesInBasket, setProductNamesInBasket}){\r\n    let totalPrice = 0; //Общая цена товаров в корзине\r\n    class BoughtProductConstructorFunc {  //класс конструкции объекта в корзине для добавления в массив\r\n        constructor(name, value, discount, numberInBasket){\r\n            this.name = name;\r\n            this.value = value;\r\n            this.discount = discount;\r\n            this.numberInBasket = numberInBasket;\r\n        }\r\n        \r\n    }\r\n\r\n    //Подсчет цену продукта, учитывая количество в корзину и скидку за количество товара\r\n    function calcPrice(product){\r\n        return product.value * product.numberInBasket - product.discount * Math.floor(product.numberInBasket / product.discountForNumberBought);\r\n    }\r\n\r\n    //Убрать продукт из добавленных в корзину при нажатии на кнопку \"х\"\r\n    function expelFromBusket(product){\r\n        setProducts(\r\n            products.map(\r\n                (prod) => {\r\n                    if(prod.id === product.id){\r\n                        prod.isAddedToBasket = false;\r\n                        prod.numberInBasket = 0;\r\n                        setProductNamesInBasket(productNamesInBasket -= 1);\r\n                    }\r\n                    return prod;\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    //рендеринг компонента в зависимости есть ли продукты в корзине или она пуста\r\n    if(isBasketEmpty){\r\n        return <div className = 'basketComponent'><div className = 'emptyBasket'>Корзина пуста :(</div> </div>\r\n    } else{\r\n        return (\r\n            <div className = 'basketComponent'>\r\n                <ul className =\"basketUl\">\r\n                {\r\n                    products.map( (product) => {\r\n                        if(product.isAddedToBasket && product.numberInBasket > 0){\r\n                            isBasketEmpty = false;\r\n                            totalPrice += calcPrice(product);\r\n                            return(\r\n                                <li className = \"basketLi\">\r\n                                    <div id = \"productBasketId\">{product.name}</div>\r\n                                    <div id = \"productBasketValue\">{`${product.value} $`}</div>\r\n                                    <div id = \"productBasketNumber\">{`№ ${product.numberInBasket}`}</div>\r\n                                    <div id = \"productBasketDiscount\">{`% ${product.discount}`}</div>\r\n                                    <PlusMinusNumberBar \r\n                                        boughtProduct = {product} \r\n                                        decrementNumber = {decrementNumber} \r\n                                        incrementNumber = {incrementNumber}\r\n                                        \r\n                                    />\r\n                                    <button onClick = {() => expelFromBusket(product)} id = 'expelFromBasket'>x</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                </ul>\r\n                <div className = 'summeryBasket'>\r\n                    <div>\r\n                        <div>Общая сумма:</div>\r\n                        <div id = \"totalPrice\">{`${totalPrice} $`}</div>\r\n                    </div>\r\n                    <button className = 'payButton'>Перейти к оплате</button>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    }\r\n}\r\n","import React from 'react'\nimport ProductList from './Product/ProductList'\nimport TopBar from './CiteBars/TopBar'\nimport BottomBar from './CiteBars/BottomBar'\nimport Basket from './Product/Basket'\n\n\nexport default function App() {\n  let [products, setProducts] = React.useState([\n    {id: 1, name: 'Банан', value: 10, isAddedToBasket: false, numberInBasket: 0, discount: 0, discountForNumberBought: 1, imgSource: 'https://good-tips.pro/images/health/banana/banana-health-big.jpg'},\n    {id: 2, name: 'Яблоко', value: 8, isAddedToBasket: false,  numberInBasket: 0, discount: 0, discountForNumberBought: 1, imgSource: 'https://st.depositphotos.com/1003272/1632/i/600/depositphotos_16322913-stock-photo-red-apple.jpg'},\n    {id: 3, name: 'Папайа', value: 10, isAddedToBasket: false,  numberInBasket: 0, discount: 5, discountForNumberBought: 3, imgSource: 'https://yesfrukt.com/storage/source/0f494eef36046ddb3223867e02350e99/content/1/xyMiQSxRPe4pojDgSx4f-zxofYyQaUe7f.jpeg.pagespeed.ic.GShY-v5PZe.jpg'}\n  ]);\n\n  let [isBusketImgClicked, setGoToBasket] = React.useState(false);\n  let [productNamesInBasket, setProductNamesInBasket] = React.useState(0); //количество наименований товаров в корзине\n  let [isBasketEmpty, setBasketState] = React.useState(true);                  \n\n  //Рендеринг страницы в 2 вариантах - основная страница товаров и страница корзины\n  if(isBusketImgClicked){\n    return (\n      <div className = \"basketPage\">\n        <TopBar goToBasket = {goToBasket} productNamesInBasket = {productNamesInBasket}/>\n        <Basket \n          products = {products}   \n          className = 'basketComponent' \n          incrementNumber = {incrementNumber} \n          decrementNumber = {decrementNumber}\n          isBasketEmpty = {isBasketEmpty}\n          setProducts = {setProducts}\n          productNamesInBasket = {productNamesInBasket}\n          setProductNamesInBasket = {setProductNamesInBasket}\n        />\n        <button className = 'navigateButton' onClick = {returnFromBasketToMainPage}>Перейти на главную страницу</button>\n        <BottomBar/>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"wrapper\">\n          <TopBar goToBasket = {goToBasket} productNamesInBasket = {productNamesInBasket}/>\n          <ProductList \n            products = {products} \n            basketItem = {addToBasket} \n            incrementProduct = {incrementNumber} \n            decrementProduct = {decrementNumber}/>\n          <div>\n            <button className = 'navigateButton' onClick = {goToBasket}>Перейти в корзину</button>\n          </div>\n          <BottomBar/>\n      </div>\n    )\n  }\n\n  //Функция добавить товар в корзину - количество товаров - 1\n  function addToBasket(id){\n    setProducts ( \n      products.map(\n        product => {\n          if(product.id === id){\n            setProductNamesInBasket(productNamesInBasket = product.isAddedToBasket ? --productNamesInBasket : ++productNamesInBasket);\n            setBasketState(false);\n            product.isAddedToBasket = !product.isAddedToBasket;\n            product.numberInBasket = Number(!Boolean(product.numberInBasket));\n          }\n          return product;\n        }\n      )\n    )\n  }\n\n  //Функция уменьшить количество товара на 1, если станет 0  - удалить из корзины\n  function decrementNumber (id){\n    setProducts(  \n      products.map( \n        product => {\n          if(product.id === id){\n            product.numberInBasket = (product.numberInBasket > 0) ? --product.numberInBasket : 0;\n            if(product.numberInBasket === 0) {\n              product.isAddedToBasket = false;\n              setProductNamesInBasket(productNamesInBasket -= 1);\n            } \n          }\n          return product;\n        }\n      )\n    )\n  }\n\n  //Функция увеличить количество товара на 1, если изначально 0  - добавить в корзину\n  function incrementNumber(id) {\n    setProducts(\n      products.map( (product) => {\n        if(product.id === id){\n          if(product.numberInBasket === 0) {\n            addToBasket(id);\n          } else{\n            product.numberInBasket  += 1;\n          } \n        }\n        return product;\n      })\n    )\n  }\n\n  //Функция для перерендеринга страницы на страницу корзины при клике на изображение корзины\n  function goToBasket(){\n    setGoToBasket(\n      isBusketImgClicked = true\n    )\n  }\n\n  //Функция для перерендеринга страницы на основную страницу при возврате из страницы корзины \n  function returnFromBasketToMainPage(){\n    setGoToBasket(\n      isBusketImgClicked = false\n    )\n  }\n\n\n  \n  \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}